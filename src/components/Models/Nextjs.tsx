/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\nextjs.glb -T 
Files: .\nextjs.glb [291.52KB] > Z:\Next\ReactDeveloperPortfolio\public\models\nextjs-transformed.glb [25.76KB] (91%)
*/

import React from 'react'
import {useGLTF} from '@react-three/drei'
import * as THREE from "three";
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Curve001: THREE.Mesh;
  };
  materials: {
    SVGMat: THREE.MeshStandardMaterial;
  };
};

type NextModelProps = {
  position?: [number, number, number];
  rotation?: [number, number, number];
  scale?: number | [number, number, number];
  [key: string]: any;
};

export function NextModel(props: NextModelProps) {
    const {nodes, materials} = useGLTF('/models/nextjs-transformed.glb') as unknown as GLTFResult
    return (
        <group {...props} dispose={null}>
            <mesh geometry={nodes.Curve001.geometry} material={materials.SVGMat} rotation={[Math.PI / 2, 0, 0]}/>
        </group>
    )
}

useGLTF.preload('/models/nextjs-transformed.glb')
